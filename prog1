 27424
Имеется набор данных, состоящий из пар положительных целых чисел. Необходимо выбрать из каждой пары ровно одно число так, чтобы сумма всех выбранных
чисел не делилась на 3 и при этом была максимально возможной. Гарантируется, что искомую сумму получить можно. Программа должна напечатать одно число —
максимально возможную сумму, соответствующую условиям задачи.

Даны два входных файла (файл A и файл B), каждый из которых содержит в первой строке количество пар N (1 ≤ N ≤ 100000). Каждая из следующих N строк содержит два
натуральных числа, не превышающих 10 000.
Пример организации исходных данных во входном файле:

6
1 3
5 12
6 9
5 4
3 3
1 1
Для указанных входных данных значением искомой суммы должно быть число 32.
В ответе укажите два числа: сначала значение искомой суммы для файла А, затем для файла B.

Предупреждение: для обработки файла B не следует использовать переборный алгоритм, вычисляющий сумму для всех возможных вариантов,
поскольку написанная по такому алгоритму программа будет выполняться слишком долго.

 f = open("27-B_demo (2).txt")  //для б, потом меняем на А
s = f.readlines()
n = int(s[0])
summi = 0
d = 10**6
for i in range(1, n + 1):
    x, y = map(int, s[i].split())
    summi += max(x, y)
    if abs(x - y) % 3 != 0:
        d = min(d, abs(x - y))
if summi % 3 != 0:
    print(summi)
else:
    print(summi - d)
